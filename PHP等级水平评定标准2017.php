分享下，PHP的阶段评分标准，这样和我曾经一样迷茫的phper就不用再迷茫了。

傻蛋级:
    没有计算机编程基础，在培训学校里培训了三个月会php或者以前搭建过网站，又有很长一段时间没写过代码的社会人员。
    特点:懂一大堆东西都说学过，实际测试的时候，机试写程序上反应半天，笔试的时候，题目鲜有答对。

入门级：
    了解什么是WEB程序员。
    理解什么是FTP，什么是虚拟机，什么是服务器。
    可以运用原生PHP编写一个简单的文章类网站和进行域名解析绑定操作。
    在windows下能完整的配置环境，能看懂phpcms、ecshop第三方开源系统的源码，能简单运用smarty模板引擎，可以进行模板的修改和常规功能的二次开发。
    可以熟练运用thinkphp3.1(3.2)轻型框架，对YII2框架或Laravel5框架之中的一个有所了解和学习。
    可以对企业网站数据库进行迁移备份；掌握简单的JS技术、Ajax、cookie、session等基本概念的使用。
    了解php的语法，数组，字符串，可以写最简单的算法比如简单的随机分组读取，熟练运用PHP的常用函数，比如字符串操作，文件操作，数组操作，画布操作，发送请求操作等；
    同时需要掌握一定Html+Css+Jquery的前端知识
    （这种php程序员大部分在外包或者对中小型企业中维护公司项目或外包开发）

初级：
    可以在Linux操作系统下独立的配置LAMP或者LNMP环境（保持简单的运行即可）
    使用过20个以上的Linux操作指令，掌握Linux的目录大致结构。
    可以手写一定的原生mysql语句和对mysql进行初步的管理，对单库的数据库架构有一定的见解，懂得运用建立索引做简单的查询优化。
    能够简单的运用OOP面向对象编程，了解过PHP的编程规范(PSR-4)，能够运用并理解命名空间与自动加载的运行机制。
    理解MVC集成设计模式的简单构成原理，可以基于一些开源框架上做简单的修改以更加贴合项目的开发要求。
    理解php扩展库的作用，同时使用过三个以上的外部扩展库。
    可以熟练运用原生PHP代码编写一些常用的小型模块（例如：数据库备份、数据库操作封装、文件上传、图像处理等）
    并对框架的业务流程有个人的见解，(建议在这个阶段可以自己尝试去写一个框架)
    理解API接口和数据交换的概念，可以根据接口文档，很快完成对各种开放API的协同开发(例如：微信API、短信API、地图API)等。
    接触过Redis和memcached内存式数据库，对数据缓存有简单的了解。
    （这个阶段的程序猿，是很大一部分初创公司招聘的储备核心技术员）

中级进阶：
    能够熟练运用TP5、YII2或Laravel 5框架，对任何框架都能够依靠手册而入门，从视频学习逐渐转向文档学习；
    对MySql数据库优化有进行深入的学习。
    能够很好的驾驭PHP7版本，并进行项目版本的升级。
    能够熟练的运用Redis缓存数据库
    可以看懂LNMP的log日志，使用过40个以上的Linux的命令（组合算新功能命令）
    可以完成简单的shell脚本编写，完成部分自动化工作，可以自己独立make安装php的某个需要支持库。 
    理解性的配置nginx上的server/fastcgi_pass/access_log等选项。
    
    理解InnoDB/MyISAM索引存储结构和不同（聚簇索引，B树）；知道基本的InnoDB事务处理机制了解部分MySQL异常情况的处理方案。
    理解程序算法结构对程序运行的效率影响，可以用php进行模块开发，同时对自己熟悉的框架可以进行深入的拓展性改造。
    熟悉基本的HTTP协议（协议代码200/300/400/500，基本的HTTP交互头）
    懂得运用Socket进行即时通讯和状态推送。
    （中型公司招聘的php写功能开发的，小公司的主管也常常在该级）

中级：
    能够在1核2G的LNMP环境下，对100W级的全站查询进行数据优化。
    对单库表的架构设计有圆形架构，线性架构，多边型架构，蜂窝型架构等思维和理念。
    对PHP的运用可以达到在不考虑性能的情况下可以做到开发出任何一个网站。
    Linux+Shell的运维技术可以达到中级(这个很模糊，因为我自己都还是摸索)
    了解什么是分布式数据架构，并尝试独立架设。
   
   
高级：
    到这个时候，其实PHPer已经是没什么能搞的了，有很多人选择了留在Linux，向运维大神进发。
    也有的人转向了产品经理的路。
    更多人则是转向了C/C++/C#的路，
    C可以写PHP的扩展，但相对来说有点小题大做。不过学C的难度有些大，但学成之后可以转向系统开发。
    C++我就不是很清楚了。
    C#最近比较流行VR/AR开发，也是未来不错的几条路
    当然更多的人是另辟途径，转深入学了爬虫像Golang或者Python。
    不过值得看清的是，在任何情况下，
    分布式架构、数据算法，Linxu运维，数据均衡和负载优化这四项，都是高级程序员必须掌握的通用技能。


弱弱说一句，我还是一个正在向中级迈进的小菜鸡.......